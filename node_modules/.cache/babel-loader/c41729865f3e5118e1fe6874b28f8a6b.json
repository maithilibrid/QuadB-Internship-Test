{"ast":null,"code":"var _jsxFileName = \"M:\\\\intership\\\\internshala\\\\quadb\\\\src\\\\components\\\\table.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.display = () => {\n      console.log(typeof this.state.data); // for(var key in this.state.data){\n      //     row.push(this.state.data[key]);\n      // }\n\n      console.log(row);\n    };\n\n    this.state = {\n      isLoaded: true,\n      error: null,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"hello\");\n    fetch(\"/api/v2/tickers\").then(response => response.json()).then(result => {\n      this.setState({\n        data: result,\n        isLoaded: true\n      }); //   result.map(res=>(console.log(res.name)))\n    }).catch(error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      data\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this);\n    } else {\n      // let row = [];\n      // for(var key in data){\n      //     row.push()\n      let row = [];\n      row.push(data);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.display,\n          children: \"click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Buy/Sell Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"base_unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), {\n            row\n          }.map(finaldata => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: finaldata.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: finaldata.last\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [finaldata.buy, \"/\", finaldata.sell]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: finaldata.volume\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: finaldata.base_unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this);\n    }\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["M:/intership/internshala/quadb/src/components/table.jsx"],"names":["React","Component","Table","constructor","props","display","console","log","state","data","row","isLoaded","error","componentDidMount","fetch","then","response","json","result","setState","catch","render","message","push","map","finaldata","name","last","buy","sell","volume","base_unit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nclass Table extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isLoaded: true,\r\n            error: null,\r\n            data:[]\r\n         }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"hello\");\r\n\r\n\r\n\r\n\r\nfetch(\"/api/v2/tickers\")\r\n  .then((response) => response.json())\r\n  .then((result) => {\r\n      this.setState({\r\n          data: result,\r\n          isLoaded:true\r\n      });\r\n    //   result.map(res=>(console.log(res.name)))\r\n      \r\n  })\r\n  .catch((error) => {\r\n      this.setState({\r\n          isLoaded:true,\r\n          error\r\n      })\r\n  });\r\n    }\r\n    display=()=>{\r\n        console.log(typeof(this.state.data));\r\n       \r\n        // for(var key in this.state.data){\r\n        //     row.push(this.state.data[key]);\r\n        // }\r\n        console.log(row);\r\n    }\r\n    render() { \r\n        const {error, isLoaded, data} = this.state;\r\n        \r\n\r\n        if (error){\r\n            return <div>Error: {error.message}</div>\r\n        } else if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        else{\r\n            // let row = [];\r\n            // for(var key in data){\r\n            //     row.push()\r\n            let row=[];\r\n            row.push(data);\r\n        return ( <div>\r\n            <button onClick={this.display}>click</button>\r\n            <table>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>name</th>\r\n                    <th>Last</th>\r\n                    <th>Buy/Sell Price</th>\r\n                    <th>volume</th>\r\n                    <th>base_unit</th>\r\n                </tr>\r\n               \r\n                {/* {Object.entries(data).forEach(finaldata=>(\r\n                    <tr>\r\n                    <td></td>\r\n                    <td>{finaldata.name}</td>\r\n                    <td>{finaldata.last}</td>\r\n                    <td>{finaldata.buy}/{finaldata.sell}</td>\r\n                    <td>{finaldata.volume}</td>\r\n                    <td>{finaldata.base_unit}</td>\r\n                    </tr>\r\n                )\r\n                   \r\n                )} */}\r\n                {{row}.map(finaldata =>(\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>{finaldata.name}</td>\r\n                        <td>{finaldata.last}</td>\r\n                        <td>{finaldata.buy}/{finaldata.sell}</td>\r\n                        <td>{finaldata.volume}</td>\r\n                        <td>{finaldata.base_unit}</td>\r\n                    </tr>\r\n                ))}\r\n            </table>\r\n        </div> );\r\n        }\r\n    }\r\n}\r\n \r\nexport default Table;"]},"metadata":{},"sourceType":"module"}