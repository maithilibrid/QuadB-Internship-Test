{"ast":null,"code":"var _jsxFileName = \"M:\\\\intership\\\\internshala\\\\quadb\\\\src\\\\components\\\\table.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.display = () => {\n      console.log(typeof this.state.data);\n    };\n\n    this.state = {\n      isLoaded: true,\n      error: null,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"hello\");\n    fetch(\"/api/v2/tickers\").then(response => response.json()).then(result => {\n      this.setState({\n        data: result,\n        isLoaded: true\n      }); //   result.map(res=>(console.log(res.name)))\n    }).catch(error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      data\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this);\n    } else {\n      // let row = [];\n      // for(var key in data){\n      //     row.push()\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.display,\n          children: \"click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Buy/Sell Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"base_unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), Object.entries(data).forEach(finaldata => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: finaldata.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: finaldata.last\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [finaldata.buy, \"/\", finaldata.sell]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: finaldata.volume\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: finaldata.base_unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this);\n    }\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["M:/intership/internshala/quadb/src/components/table.jsx"],"names":["React","Component","Table","constructor","props","display","console","log","state","data","isLoaded","error","componentDidMount","fetch","then","response","json","result","setState","catch","render","message","Object","entries","forEach","finaldata","name","last","buy","sell","volume","base_unit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+BnBC,OA/BmB,GA+BX,MAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKC,KAAL,CAAWC,IAA9B;AACH,KAjCkB;;AAEf,SAAKD,KAAL,GAAa;AACTE,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTF,MAAAA,IAAI,EAAC;AAHI,KAAb;AAKH;;AACDG,EAAAA,iBAAiB,GAAE;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAKRM,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,MAAD,IAAY;AACd,WAAKC,QAAL,CAAc;AACVT,QAAAA,IAAI,EAAEQ,MADI;AAEVP,QAAAA,QAAQ,EAAC;AAFC,OAAd,EADc,CAKhB;AAED,KATH,EAUGS,KAVH,CAUUR,KAAD,IAAW;AACd,WAAKO,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAC,IADC;AAEVC,QAAAA;AAFU,OAAd;AAIH,KAfH;AAgBK;;AAIDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAACT,MAAAA,KAAD;AAAQD,MAAAA,QAAR;AAAkBD,MAAAA;AAAlB,QAA0B,KAAKD,KAArC;;AAGA,QAAIG,KAAJ,EAAU;AACN,0BAAO;AAAA,8BAAaA,KAAK,CAACU,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAG,CAACX,QAAJ,EAAa;AAChB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAGH;AACA;AACA;AACA;AAEJ,0BAAS;AAAA,gCACL;AAAQ,UAAA,OAAO,EAAE,KAAKL,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADK,eAEL;AAAA,kCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAUKiB,MAAM,CAACC,OAAP,CAAed,IAAf,EAAqBe,OAArB,CAA6BC,SAAS,iBACnC;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,wBAAKA,SAAS,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA,wBAAKD,SAAS,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA,yBAAKF,SAAS,CAACG,GAAf,OAAqBH,SAAS,CAACI,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA;AAAA,wBAAKJ,SAAS,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,oBALA,eAMA;AAAA,wBAAKL,SAAS,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA,oBANA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,CAVL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFK;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AAoCC;AACJ;;AAtFyB;;AAyF9B,eAAe7B,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nclass Table extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isLoaded: true,\r\n            error: null,\r\n            data:[]\r\n         }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"hello\");\r\n\r\n\r\n\r\n\r\nfetch(\"/api/v2/tickers\")\r\n  .then((response) => response.json())\r\n  .then((result) => {\r\n      this.setState({\r\n          data: result,\r\n          isLoaded:true\r\n      });\r\n    //   result.map(res=>(console.log(res.name)))\r\n      \r\n  })\r\n  .catch((error) => {\r\n      this.setState({\r\n          isLoaded:true,\r\n          error\r\n      })\r\n  });\r\n    }\r\n    display=()=>{\r\n        console.log(typeof(this.state.data));\r\n    }\r\n    render() { \r\n        const {error, isLoaded, data} = this.state;\r\n        \r\n\r\n        if (error){\r\n            return <div>Error: {error.message}</div>\r\n        } else if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        else{\r\n            // let row = [];\r\n            // for(var key in data){\r\n            //     row.push()\r\n            \r\n        return ( <div>\r\n            <button onClick={this.display}>click</button>\r\n            <table>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>name</th>\r\n                    <th>Last</th>\r\n                    <th>Buy/Sell Price</th>\r\n                    <th>volume</th>\r\n                    <th>base_unit</th>\r\n                </tr>\r\n               \r\n                {Object.entries(data).forEach(finaldata=>(\r\n                    <tr>\r\n                    <td></td>\r\n                    <td>{finaldata.name}</td>\r\n                    <td>{finaldata.last}</td>\r\n                    <td>{finaldata.buy}/{finaldata.sell}</td>\r\n                    <td>{finaldata.volume}</td>\r\n                    <td>{finaldata.base_unit}</td>\r\n                    </tr>\r\n                )\r\n                   \r\n                )}\r\n                {/* {data.map(finaldata =>(\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>{finaldata.name}</td>\r\n                        <td>{finaldata.last}</td>\r\n                        <td>{finaldata.buy}/{finaldata.sell}</td>\r\n                        <td>{finaldata.volume}</td>\r\n                        <td>{finaldata.base_unit}</td>\r\n                    </tr>\r\n                ))} */}\r\n            </table>\r\n        </div> );\r\n        }\r\n    }\r\n}\r\n \r\nexport default Table;"]},"metadata":{},"sourceType":"module"}