{"ast":null,"code":"var _jsxFileName = \"M:\\\\intership\\\\internshala\\\\quadb\\\\src\\\\components\\\\table.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: true,\n      error: null,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.wazirx.com/api/v2/tickers\").then(res => res.json).then(result => {\n      this.setState({\n        data: result,\n        isLoaded: true\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      data\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Buy/Sell Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"base_unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), data.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.last\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [data.buy, \"/\", data.sell]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.volume\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.base_unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this);\n    }\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["M:/intership/internshala/quadb/src/components/table.jsx"],"names":["React","Component","Table","constructor","props","state","isLoaded","error","data","componentDidMount","fetch","then","res","json","result","setState","render","message","map","name","last","buy","sell","volume","base_unit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,IAAI,EAAC;AAHI,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IADjB,EAECF,IAFD,CAGKG,MAAD,IAAW;AACP,WAAKC,QAAL,CAAc;AACVP,QAAAA,IAAI,EAAEM,MADI;AAEVR,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH,KARL,EASKC,KAAD,IAAU;AACN,WAAKQ,QAAL,CAAc;AACVT,QAAAA,QAAQ,EAAC,IADC;AAEVC,QAAAA;AAFU,OAAd;AAIH,KAdL;AAgBH;;AACDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAACT,MAAAA,KAAD;AAAQD,MAAAA,QAAR;AAAkBE,MAAAA;AAAlB,QAA0B,KAAKH,KAArC;;AACA,QAAIE,KAAJ,EAAU;AACN,0BAAO;AAAA,8BAAaA,KAAK,CAACU,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAG,CAACX,QAAJ,EAAa;AAChB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAGH;AACJ,0BAAS;AAAA,+BACL;AAAA,kCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EASKE,IAAI,CAACU,GAAL,CAASV,IAAI,iBACV;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKA,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKX,IAAI,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,yBAAKZ,IAAI,CAACa,GAAV,OAAgBb,IAAI,CAACc,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,wBAAKd,IAAI,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA,wBAAKf,IAAI,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,CATL;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,cAAT;AAsBC;AACJ;;AA1DyB;;AA6D9B,eAAetB,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nclass Table extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isLoaded: true,\r\n            error: null,\r\n            data:[]\r\n         }\r\n    }\r\n    componentDidMount(){\r\n        fetch(\"https://api.wazirx.com/api/v2/tickers\")\r\n        .then(res => res.json)\r\n        .then(\r\n            (result) =>{\r\n                this.setState({\r\n                    data: result,\r\n                    isLoaded: true\r\n                });\r\n            },\r\n            (error) =>{\r\n                this.setState({\r\n                    isLoaded:true,\r\n                    error\r\n                });\r\n            }\r\n        )\r\n    }\r\n    render() { \r\n        const {error, isLoaded, data} = this.state;\r\n        if (error){\r\n            return <div>Error: {error.message}</div>\r\n        } else if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        else{\r\n        return ( <div>\r\n            <table>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>name</th>\r\n                    <th>Last</th>\r\n                    <th>Buy/Sell Price</th>\r\n                    <th>volume</th>\r\n                    <th>base_unit</th>\r\n                </tr>\r\n                {data.map(data =>(\r\n                    <tr>\r\n                        <td></td>\r\n                        <td>{data.name}</td>\r\n                        <td>{data.last}</td>\r\n                        <td>{data.buy}/{data.sell}</td>\r\n                        <td>{data.volume}</td>\r\n                        <td>{data.base_unit}</td>\r\n                    </tr>\r\n                ))}\r\n            </table>\r\n        </div> );\r\n        }\r\n    }\r\n}\r\n \r\nexport default Table;"]},"metadata":{},"sourceType":"module"}