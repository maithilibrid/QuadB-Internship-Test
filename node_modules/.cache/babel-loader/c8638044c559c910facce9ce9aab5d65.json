{"ast":null,"code":"var _jsxFileName = \"M:\\\\intership\\\\internshala\\\\quadb\\\\src\\\\components\\\\table2.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: true,\n      error: null,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"hello\");\n    fetch(\"/api/v2/tickers\").then(response => response.json()).then(result => {\n      this.setState({\n        data: result,\n        isLoaded: true\n      });\n    }).catch(error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      data\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    } else {\n      const items = [];\n\n      for (var key in data) {\n        items.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 28\n        }, this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Table2;","map":{"version":3,"sources":["M:/intership/internshala/quadb/src/components/table2.jsx"],"names":["React","Component","Table2","constructor","props","state","isLoaded","error","data","componentDidMount","console","log","fetch","then","response","json","result","setState","catch","render","message","items","key","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,IAAI,EAAC;AAHI,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,IAAAA,KAAK,CAAC,iBAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,MAAD,IAAY;AACd,WAAKC,QAAL,CAAc;AACVT,QAAAA,IAAI,EAAEQ,MADI;AAEVV,QAAAA,QAAQ,EAAC;AAFC,OAAd;AAIH,KAPD,EAQCY,KARD,CAQQX,KAAD,IAAW;AACd,WAAKU,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAC,IADC;AAEVC,QAAAA;AAFU,OAAd;AAIH,KAbD;AAcH;;AAEDY,EAAAA,MAAM,GAAG;AACJ,UAAM;AAACZ,MAAAA,KAAD;AAAQD,MAAAA,QAAR;AAAkBE,MAAAA;AAAlB,QAA0B,KAAKH,KAArC;;AAGD,QAAIE,KAAJ,EAAU;AACN,0BAAO;AAAA,8BAAaA,KAAK,CAACa,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAG,CAACd,QAAJ,EAAa;AAChB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAGH;AACA,YAAMe,KAAK,GAAG,EAAd;;AAEA,WAAK,IAAIC,GAAT,IAAgBd,IAAhB,EAAsB;AAClBa,QAAAA,KAAK,CAACE,IAAN,eAAW;AAAA,oBAAgBD;AAAhB,WAAUA,GAAV;AAAA;AAAA;AAAA;AAAA,gBAAX;AACH;;AACD,0BACI;AAAA,kBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;;AA9C0B;;AAiD/B,eAAenB,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nclass Table2 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoaded: true,\r\n            error: null,\r\n            data:[] \r\n         }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"hello\");\r\n        fetch(\"/api/v2/tickers\")\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                data: result,\r\n                isLoaded:true\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            this.setState({\r\n                isLoaded:true,\r\n                error\r\n            })\r\n        });\r\n    }\r\n\r\n    render() { \r\n         const {error, isLoaded, data} = this.state;\r\n        \r\n\r\n        if (error){\r\n            return <div>Error: {error.message}</div>\r\n        } else if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        else{\r\n            const items = []\r\n\r\n            for (var key in data) {\r\n                items.push(<div key={key}>{key}</div>)\r\n            }\r\n            return(\r\n                <div>{items}</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n \r\nexport default Table2;"]},"metadata":{},"sourceType":"module"}